A = matrix(data = 1:16, nrow = 4, ncol = 4)
A
# Linhas
#
# Colunas
# transpor matriz (APENAS QUANDO EXTREMAMENTE NECESSÁRIO!!!!!)
[,1]
[[,1]]
A[,1]
A[2,3]
# Linhas
# representação [1,]
# Colunas
# representação [,1]
A[2,4]
A[2,4]
# Linhas
# representação [1,]
# Colunas
# representação [,1]
A[2,4]
nome = "Virgilio"
nome = c("Virgilio", "Marcos", "Amanda", "Ana")
idade = 18
idade = c(18, 35, 20, 21)
.75
altura = c(1.71, 1.90, 1.60, 1.75)
banco = data.frame(nome, idade, altura)
banco
class(banco)
class(banco$nome)
banco = data.frame(nome, idade, altura, stringsAsFactors=F)
banco = data.frame(nome, idade, altura, stringsAsFactors=F)
class(banco$nome)
rm(A)
rm(list = ls())
# Capacitação: Introdução ao R - MEIOS JR
# 25-07-2020
# Virgilio de A. Mendes
# Ciência Política - UFMG
# Aula 01
# TOPICOS:
#         - Ambiente do RStudio
#              * Funções
#                  * Recursos do RStudio (ferramentas, etc)
#
#         - Operações Básicas
#         - Objetos (classe e tipos de dados)
#         - Estatísticas e investigações do banco de dados
# operações básicas
5 + 7 # soma
5 - 2 # subtração
5 * 2 # multiplicação
5 / 2 # divisão
5 %/% 2 # divisão inteira
5 %% 2 # resto da divisão
##########################################################################
# sinal de atribuição
x <- 5
x
y = 5
y
# operações com objetos
x + y
x * y
x / y
##########################################################################
# Vetores
x = c(6, 8, 10, 3) # comnado c() cria um vetor - função concatenar
y = c(4, 6, 3, 5)
# operações com vetores devem ter vetores com o mesmo munero de elementos
x + y # operações com vetores
x - y
x * y
x / y
##########################################################################
# comando para saber a classe do dado/vetor/conjunto
class(x)
# x é classe numeric = números que assumem casas decimais
##########################################################################
# dados do tipo character (texto)
nome = "Virgilio"
sobrenome = "Mendes"
# chamando o objeto
nome
sobrenome
# chamando a classe do objeto nome
class(nome)
##########################################################################
# funções básicas para manipulação de texto
# paste mostra objeto no console
paste(nome, sobrenome)
p1 = "Eu"
p2 = "gosto"
p3 = "de"
p4 = "café"
paste(p1, p2, p3, p4)
# usando paste e separador com ,
paste(p1, p2, p3, p4, sep = ",")
frase = paste(p1, p2, p3, p4) # criando objeto da frase a partir do paste
tolower(frase) # todos os caracteres em minusculo
toupper(frase) # todos os caracteres em maiusculo
frase
grep("não!", frase) # função de buscar padrões de texto
grep("gosto", frase)
gsub("de", "DE", frase) # função de substituição de caracteres (substituição de "de" por "DE")
# estas são estruturas unidimencionais, vetores,
# que conjuntos de dados de apenas uma dimensão
##########################################################################
# Linhas e colunas - Estruturas de dados bidimensionais
# Matrizes e bancos de dados
A = matrix(data = 1:16, nrow = 4, ncol = 4)
A # criando matrix 4 por 4 (numeros de 1 a 16)
# Linhas
# representação [1,]
# Colunas
# representação [,1]
A[2,4]
##########################################################################
# Data frames
nome = c("Virgilio", "Marcos", "Amanda", "Ana")
idade = c(18, 35, 20, 21)
altura = c(1.71, 1.90, 1.60, 1.75)
banco = data.frame(nome, idade, altura, stringsAsFactors=F)
class(banco$nome)
rm(list = ls())
data(iris)
iris = iris
rm(list = ls())
#
iris = iris
View(iris)
names(iris)
# Dimensões
dim(iris)
head(iris)
# mostra os 6 ultimos casos
tail(iris)
# Dimensões do bd
dim(iris)
class(iris)
class(iris$Species)
class(iris$Petal.Length)
# tirar a classe do banco
class(iris)
# estrutura do bd
str(iris)
# tira media
mean(Petal.Length)
# tira media
mean(iris$Petal.Length)
# tirar mediana
median(iris$Sepal.Width)
#
mode(iris$Petal.Width)
# desvio padrão
sd(iris$Petal.Width)
# desvio padrão
sd(iris$Petal.Width, na.rm = T)
#
summary(iris)
#
summary(iris$Species)
# resume as informações da varaivel
summary(iris$Sepal.Length)
plot(iris$Sepal.Length)
histogram(iris$Sepal.Length)
barplot(table(iris$Sepal.Length))
# resume as informações da varaivel
summary(iris$Sepal.Length)
#
range(iris$Sepal.Width)
# min
min(iris$Sepal.Length)
# max
max(iris$Sepal.Width)
#install.packages("ggplot2")
library(ggplot2) # Para gráficos mais elaborados
#install.packages("questionr")
library(questionr) # Functions to Make Surveys Processing Easier
#install.packages("dplyr")
library(dplyr) # A Grammar of Data Manipulation
#install.packages("questionr")
library(questionr) # Functions to Make Surveys Processing Easier
#install.packages("dplyr")
library(dplyr) # A Grammar of Data Manipulation
#install.packages("questionr")
library(questionr) # Functions to Make Surveys Processing Easier
ggplot(aes, iris$Sepal.Length, iris$Sepal.Width) +
geom_point()
#install.packages("ggplot2")
library(ggplot2) # Para gráficos mais elaborados
#install.packages("questionr")
library(questionr) # Functions to Make Surveys Processing Easier
ggplot(aes, iris$Sepal.Length, iris$Sepal.Width) +
geom_point()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 10)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 1)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 4)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS")
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS") +
theme_dark()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS") +
theme_minimal()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS", caption = "Virgilio") +
theme_minimal()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala") +
theme_minimal()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
names(iris)
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_boxplot()
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_boxplot() +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_boxplot() +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
ggplot(iris, aes(x = Species, y = Sepal.Length)) +
geom_boxplot() +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
# Box Plot
ggplot(iris, aes(x = Species, y = Sepal.Length)) +
geom_boxplot() +
labs(title = "Boxplot ", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
rm(list = ls())
# Capacitação: Introdução ao R - MEIOS JR
# 25-07-2020
# Virgilio de A. Mendes
# Ciência Política - UFMG
# Aula 01
# TOPICOS:
#         - Ambiente do RStudio
#              * Funções
#                  * Recursos do RStudio (ferramentas, etc)
#
#         - Operações Básicas
#         - Objetos (classe e tipos de dados)
#         - Estatísticas e investigações do banco de dados
# operações básicas
5 + 7 # soma
5 - 2 # subtração
5 * 2 # multiplicação
5 / 2 # divisão
5 %/% 2 # divisão inteira
5 %% 2 # resto da divisão
##########################################################################
# sinal de atribuição
x <- 5
x
y = 5
y
# operações com objetos
x + y
x * y
x / y
##########################################################################
# Vetores
x = c(6, 8, 10, 3) # comnado c() cria um vetor - função concatenar
y = c(4, 6, 3, 5)
# operações com vetores devem ter vetores com o mesmo munero de elementos
x + y # operações com vetores
x - y
x * y
x / y
##########################################################################
# comando para saber a classe do dado/vetor/conjunto
class(x)
# x é classe numeric = números que assumem casas decimais
##########################################################################
# dados do tipo character (texto)
nome = "Virgilio"
sobrenome = "Mendes"
# chamando o objeto
nome
sobrenome
# chamando a classe do objeto nome
class(nome)
##########################################################################
# funções básicas para manipulação de texto
# paste mostra objeto no console
paste(nome, sobrenome)
p1 = "Eu"
p2 = "gosto"
p3 = "de"
p4 = "café"
paste(p1, p2, p3, p4)
# usando paste e separador com ,
paste(p1, p2, p3, p4, sep = ",")
frase = paste(p1, p2, p3, p4) # criando objeto da frase a partir do paste
tolower(frase) # todos os caracteres em minusculo
toupper(frase) # todos os caracteres em maiusculo
frase
grep("não!", frase) # função de buscar padrões de texto
grep("gosto", frase)
gsub("de", "DE", frase) # função de substituição de caracteres (substituição de "de" por "DE")
# estas são estruturas unidimencionais, vetores,
# que conjuntos de dados de apenas uma dimensão
##########################################################################
# Linhas e colunas - Estruturas de dados bidimensionais
# Matrizes e bancos de dados
A = matrix(data = 1:16, nrow = 4, ncol = 4)
A # criando matrix 4 por 4 (numeros de 1 a 16)
# Linhas
# representação [1,]
# Colunas
# representação [,1]
A[2,4]
##########################################################################
# Data frames
nome = c("Virgilio", "Marcos", "Amanda", "Ana")
idade = c(18, 35, 20, 21)
altura = c(1.71, 1.90, 1.60, 1.75)
banco = data.frame(nome, idade, altura, stringsAsFactors=F)
class(banco$nome)
####################################################################
# carregar banco de bados iris (inato do r)
iris = iris
# Mostra os nomes das variaveis
names(iris)
# Dimensões do bd
dim(iris)
# mostra os 6 primeiros casos
head(iris)
# mostra os 6 ultimos casos
tail(iris)
# tira a classe da variavel
class(iris$Petal.Length)
# tirar a classe do banco
class(iris)
# estrutura do bd
str(iris)
# tira media
mean(iris$Petal.Length, na.rm = T)
# tirar mediana
median(iris$Sepal.Width, na.rm = T)
# desvio padrão
sd(iris$Petal.Width, na.rm = T)
# max
max(iris$Sepal.Width)
# min
min(iris$Sepal.Length)
# resume as informações da varaivel
summary(iris$Sepal.Length)
# grafico de barras
#barplot(table(iris$Sepal.Length))
#-----------------------------------------------
# Análises
#install.packages("dplyr")
library(dplyr) # A Grammar of Data Manipulation
#install.packages("questionr")
library(questionr) # Functions to Make Surveys Processing Easier
#install.packages("ggplot2")
library(ggplot2) # Para gráficos mais elaborados
# link: https://CRAN.R-project.org/package=dplyr
# link: https://CRAN.R-project.org/package=questionr
# Usando Banco de dados inato do R: Iris
options(scipen = 999) # tira notação científica
#rm(list = ls()) # limpa tudo
# Gráfico de Dispersão
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
# Box Plot
ggplot(iris, aes(x = Species, y = Sepal.Length)) +
geom_boxplot() +
labs(title = "Boxplot ", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
# Gráfico de Dispersão
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
####################################################################
nomes = iris
rm(list = ls())
#################################################################
getwd()
#install.packages("dplyr")
library(dplyr) # A Grammar of Data Manipulation
#install.packages("questionr")
library(questionr) # Functions to Make Surveys Processing Easier
#install.packages("ggplot2")
library(ggplot2) # Para gráficos mais elaborados
library(readxl)
read_excel("Base de dados - CACS LINGUAS.xlsx")
bd = read_excel("Base de dados - CACS LINGUAS.xlsx")
read.csv("Base de dados - CACS LINGUAS.xlsx")
# ver o diretorio de trabalho
getwd()
# setar diretório de trabalho
setwd("C:/Users/Virgilio/Desktop/")
# ver o diretorio de trabalho
getwd()
# setar diretório de trabalho
setwd("C:/Users/Virgilio/Desktop/Inferência Causal")
# setar diretório de trabalho
setwd("C:/Users/Virgilio/Desktop/")
# ver o diretorio de trabalho
getwd()
bd1 = read_excel("Base de dados - CACS LINGUAS.xlsx")
names(bd)
# Visualização do banco
View(bd)
str(bd)
# carregar banco de bados iris (inato do r)
iris = iris
# Gráfico de Dispersão
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
# Gráfico de Dispersão
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
# Gráfico de Dispersão
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
# Gráfico de Dispersão
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
ggsave("grafico_de_dispersao.png", height = 10, width = 12)
# Box Plot
ggplot(iris, aes(x = Species, y = Sepal.Length)) +
geom_boxplot() +
labs(title = "Boxplot ", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
ggsave("boxplot.png", height = 8, width = 10)
ggsave("boxplot.pdf", height = 8, width = 10)
ggsave("grafico_de_dispersao.pdf", height = 10, width = 12)
# Gráfico de Dispersão
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species)) +
geom_point(size = 2, shape = 3) +
labs(title = "Gráfico de Dispersão", subtitle = "Capacitação MEIOS",
caption = "Virgilio", x = "Comprimento da Sépala", y = "Largura da Sépala") +
theme_minimal()
ggsave("grafico_de_dispersao.pdf", height = 10, width = 12)
